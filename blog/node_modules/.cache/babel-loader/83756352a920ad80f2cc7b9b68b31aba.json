{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wnl38\\\\OneDrive\\\\Desktop\\\\React Class\\\\blog\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //var a, b = [10, 100]; //ES6 destructuring 문법 \n  let [글제목, 글제목변경] = useState('남자 코트 추천');\n  let [글제목2, 글제목변경2] = useState('강남 우동 추천');\n  let [글제목3, 글제목변경3] = useState('남자 여름 코디'); //state라는 변수 저장공간 만들기\n  //이렇게 State를 만들면 array가 생성된다.\n  //array안에는 [a,b]처럼 두가지 데이터가 들어있다.\n  //a에는 '남자 코트 추천'이 들어있고 \n  //b에는 a의 데이터를 수정하기 위한 함수가 들어있다. \n  //state는 변수 대신 쓰는 데이터 저장 공간 \n  //useState()를 사용해서 만들어야 함\n  //문자, 숫자, array, Object 다 저장 가능\n  //state를 굳이 쓰는 이유는? \n  //react를 Web-app 처럼 만들고 싶으면 전부 state로 만들어라\n  //데이터 변경시에 state로 만들어진 데이터라면 HTML이 저절로 재렌더링이 되므로\n  //state로 만든 변수들이 엄청 용이하다. \n\n  let posts = '강남 고기 맛집';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC1C\\uBC1C blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 글제목\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 글제목2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 18\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 글제목3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 19\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"abhYEcp3ejaEDmkJGv9nxZSyLCY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/wnl38/OneDrive/Desktop/React Class/blog/src/App.js"],"names":["React","useState","App","글제목","글제목변경","글제목2","글제목변경2","글제목3","글제목변경3","posts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AAEA,MAAI,CAACC,GAAD,EAAKC,KAAL,IAAcH,QAAQ,CAAC,UAAD,CAA1B;AACA,MAAI,CAACI,IAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,UAAD,CAA5B;AACA,MAAI,CAACM,IAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,UAAD,CAA5B,CANa,CAOb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIQ,KAAK,GAAG,UAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA3CQL,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  //var a, b = [10, 100]; //ES6 destructuring 문법 \n\n  let [글제목,글제목변경] = useState('남자 코트 추천'); \n  let [글제목2,글제목변경2] = useState('강남 우동 추천');\n  let [글제목3,글제목변경3] = useState('남자 여름 코디');\n  //state라는 변수 저장공간 만들기\n  //이렇게 State를 만들면 array가 생성된다.\n  //array안에는 [a,b]처럼 두가지 데이터가 들어있다.\n  //a에는 '남자 코트 추천'이 들어있고 \n  //b에는 a의 데이터를 수정하기 위한 함수가 들어있다. \n  //state는 변수 대신 쓰는 데이터 저장 공간 \n  //useState()를 사용해서 만들어야 함\n  //문자, 숫자, array, Object 다 저장 가능\n  //state를 굳이 쓰는 이유는? \n  //react를 Web-app 처럼 만들고 싶으면 전부 state로 만들어라\n  //데이터 변경시에 state로 만들어진 데이터라면 HTML이 저절로 재렌더링이 되므로\n  //state로 만든 변수들이 엄청 용이하다. \n\n  let posts = '강남 고기 맛집';\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 blog</div>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목 }</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목2 }</h3>\n        <p>2월 18일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목3 }</h3>\n        <p>2월 19일 발행</p>\n        <hr/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
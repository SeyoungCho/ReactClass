{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wnl38\\\\OneDrive\\\\Desktop\\\\React Class\\\\shop\\\\src\\\\Detail.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss'; //아래와 같이 CSS를 미리 입혀 놓은 컴포넌트를 만들 수 있음 (styled import후)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet 박스 = styled.div`\n    padding: 20px;\n    \n`;\nlet 제목 = styled.h4`\n    font-size: 25px;\n    color: ${props => props.색상}\n`; // 컴포넌트의 Lifecycle\n// 컴포넌트는 등장, 업데이트(재렌더링), 퇴장(사라짐)의 라이프사이클을 가진다. \n// 여기서 Hook이라는 것으로 컴포넌트의 인생 중간중간에 뭔가 명령을 줄 수 있다. \n// ex.<Detail>등장 전에 이것좀 해주세요 등등\n// class Detail2 extends React.Component{\n//     componentDidMount(){\n//     //얘네가 옛날스타일 Hook이다. \n//     }\n//     componentWillUnmount(){\n//     }\n// }\n\nfunction Detail(props) {\n  _s();\n\n  let [alert, alert변경] = useState(true);\n  let [inputData, inputData변경] = useState(''); // useEffect Hook : 컴포넌트가 마운트 되었을 때 \n  // 컴포넌트가 update될 때 \n  // 특정코드를 실행할 수 있음. \n  // 콤마 이후 대괄호 안에는 useEffect가 실행될 조건을 적을 수 있다. \n  // useEffect()여러개 적으면 적은 순서대로 실행된다. AJAX사용 시 활용함\n\n  useEffect(() => {\n    //이렇게 치면 컴포넌트가 update될 때 아래 코드가 실행된다. \n    //2초후에 alert창을 안보이게 해보자. \n    let timer = setTimeout(() => {\n      alert변경(false);\n    }, 2000); //return ()=>{실행할 코드} //detail이란 컴포넌트가 사라질 때 실행할 코드\n    //setTimeout쓸 때 주의점 : 타이머를 끝나고 제거해주지 않으면\n    // 버그가 발생 할 수도 있다. return으로 제거해주기\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [alert]); // 위 처럼 [alert]라고 넣어주면 alert라는 state가 변결될때만 실행해주세요 라는 말.\n  // 만약 []이라고 아무것도 안쓴다면, Detail컴포넌트가 최초로 등장할 때 \n  // 그때 한 번만 실행된다. \n\n  let {\n    id\n  } = useParams();\n  let 찾은상품 = props.shoes.find(상품 => {\n    return 상품.id == id;\n  });\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(박스, {\n      children: /*#__PURE__*/_jsxDEV(제목, {\n        className: \"red\",\n        색상: \"green\",\n        children: \"Detailed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), inputData, /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        inputData변경(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), alert === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-alert2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7AC\\uACE0\\uAC00 \\uC5BC\\uB9C8 \\uB0A8\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://codingapple1.github.io/shop/shoes' + (찾은상품.id + 1) + '.jpg',\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"pt-5\",\n          children: 찾은상품.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: 찾은상품.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: 찾은상품.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"\\uC8FC\\uBB38\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => {\n            history.goBack(); //history.push('/xxx')이라 하면 특정 경로로 이동시킬 수 있다.\n          },\n          children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Detail, \"iVa6iY9wuz3ozHjyUy019rDb09A=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Detail;\n\nfunction info() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uC7AC\\uACE0 : ???\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/Users/wnl38/OneDrive/Desktop/React Class/shop/src/Detail.js"],"names":["axios","React","useEffect","useState","useHistory","useParams","styled","박스","div","제목","h4","props","색상","Detail","alert","alert변경","inputData","inputData변경","timer","setTimeout","clearTimeout","id","찾은상품","shoes","find","상품","history","e","target","value","title","content","price","goBack","info"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\n//아래와 같이 CSS를 미리 입혀 놓은 컴포넌트를 만들 수 있음 (styled import후)\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n    \r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size: 25px;\r\n    color: ${ props => props.색상 }\r\n`;\r\n\r\n// 컴포넌트의 Lifecycle\r\n// 컴포넌트는 등장, 업데이트(재렌더링), 퇴장(사라짐)의 라이프사이클을 가진다. \r\n// 여기서 Hook이라는 것으로 컴포넌트의 인생 중간중간에 뭔가 명령을 줄 수 있다. \r\n// ex.<Detail>등장 전에 이것좀 해주세요 등등\r\n\r\n// class Detail2 extends React.Component{\r\n\r\n//     componentDidMount(){\r\n//     //얘네가 옛날스타일 Hook이다. \r\n//     }\r\n//     componentWillUnmount(){\r\n\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Detail(props){\r\n    \r\n    let [ alert, alert변경 ] = useState(true);\r\n    let [ inputData, inputData변경 ] = useState('');\r\n    // useEffect Hook : 컴포넌트가 마운트 되었을 때 \r\n    // 컴포넌트가 update될 때 \r\n    // 특정코드를 실행할 수 있음. \r\n    // 콤마 이후 대괄호 안에는 useEffect가 실행될 조건을 적을 수 있다. \r\n    // useEffect()여러개 적으면 적은 순서대로 실행된다. AJAX사용 시 활용함\r\n    useEffect(()=>{\r\n        //이렇게 치면 컴포넌트가 update될 때 아래 코드가 실행된다. \r\n        //2초후에 alert창을 안보이게 해보자. \r\n        let timer = setTimeout(()=>{\r\n            alert변경(false);\r\n        }, 2000);     \r\n        //return ()=>{실행할 코드} //detail이란 컴포넌트가 사라질 때 실행할 코드\r\n        //setTimeout쓸 때 주의점 : 타이머를 끝나고 제거해주지 않으면\r\n        // 버그가 발생 할 수도 있다. return으로 제거해주기\r\n        return ()=>{clearTimeout(timer)};\r\n      }, [alert]);\r\n    // 위 처럼 [alert]라고 넣어주면 alert라는 state가 변결될때만 실행해주세요 라는 말.\r\n    // 만약 []이라고 아무것도 안쓴다면, Detail컴포넌트가 최초로 등장할 때 \r\n    // 그때 한 번만 실행된다. \r\n    \r\n    let { id } = useParams();\r\n    let 찾은상품 = props.shoes.find((상품)=>{\r\n        return 상품.id == id;\r\n    })\r\n    let history = useHistory();\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n          <박스>\r\n            <제목 className=\"red\" 색상='green'>Detailed</제목>\r\n          </박스>\r\n          {inputData}\r\n          <input onChange={(e)=>{ inputData변경(e.target.value)}}/>\r\n          {/* e.target.value는 현재 입력되는 값을 의미한다. */}\r\n          {/* 여기서 문제 : inputData가 바뀔 때마다 HTML이 재렌더링된다. \r\n          이렇게 되면 위에 만든 UI인 alert도 계속 재렌더링되는 것이다. \r\n          useEffect()가 계속 재실행되는 버그가 발생하는 것 \r\n          그래서 useEffect에 파라미터로 마지막에 실행조건을 넣어주면 된다.*/}\r\n          {\r\n            alert === true \r\n            ?  (<div className=\"my-alert2\">\r\n                  <p>재고가 얼마 남지 않았습니다</p>\r\n              </div>)\r\n            : null\r\n          }\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={'https://codingapple1.github.io/shop/shoes' + (찾은상품.id + 1) + '.jpg'} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n              <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n              <p>{찾은상품.content}</p>\r\n              <p>{찾은상품.price}</p>\r\n              <button className=\"btn btn-danger\">주문하기</button> \r\n              <button className=\"btn btn-danger\" onClick={\r\n                ()=>{ history.goBack();\r\n                    //history.push('/xxx')이라 하면 특정 경로로 이동시킬 수 있다.\r\n                }}>뒤로가기</button>\r\n            </div>\r\n          </div>\r\n        </div> \r\n\r\n        \r\n    )\r\n}\r\n\r\nfunction info(){\r\n  return(\r\n    <p>재고 : ???</p>\r\n  )\r\n}\r\n\r\nexport default Detail;"]},"metadata":{},"sourceType":"module"}